{"version":3,"sources":["helpers/args-extractors.ts","helpers/typescript.builder.ts","helpers/set-config.ts","helpers/basic.template.ts","helpers/advanced-schema.ts","helpers/basic-schema.ts","app/app.module.ts","main.ts"],"names":[],"mappings":"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","file":"main.js","sourceRoot":"../src","sourcesContent":["export const includes = i => process.argv.toString().includes(i);\nexport const nextOrDefault = (i, fb: any = true, type = p => p) => {\n  if (process.argv.toString().includes(i)) {\n    const isNextArgumentPresent = process.argv[process.argv.indexOf(i) + 1];\n    if (!isNextArgumentPresent) {\n      return fb;\n    }\n    if (isNextArgumentPresent.includes('--')) {\n      return fb;\n    }\n    return type(isNextArgumentPresent);\n  }\n  return fb;\n};\n","import { spawn } from 'child_process';\n\nexport const TranspileTypescript = (paths: string[], outDir: string) => {\n  return new Promise((resolve, reject) => {\n    const child = spawn('npx', [\n      'gapi',\n      'build',\n      '--glob',\n      `${paths.toString()}`,\n      '--outDir',\n      outDir\n    ]);\n    // child.stdout.pipe(process.stdout);\n    child.stderr.pipe(process.stderr);\n    child.on('close', (code: number) => resolve(code));\n  });\n};\n","import { promisify } from 'util';\nimport { exists, Stats, writeFile, stat, readFile, unlink, readFileSync } from 'fs';\nimport { TranspileTypescript } from './typescript.builder';\nimport { join } from 'path';\nimport { load } from 'js-yaml';\n\nexport async function getConfig(configFilename: string) {\n  let config;\n  try {\n    config = require('esm')(module)(\n      join(process.cwd(), `${configFilename}.js`)\n    );\n  } catch (e) {}\n  if (await promisify(exists)(`./${configFilename}.yml`)) {\n    const file = readFileSync(`./${configFilename}.yml`, {encoding: 'utf-8'})\n    config = load(file);\n    console.log(config)\n  }\n  if (await promisify(exists)(`./${configFilename}.ts`)) {\n    const isMigrateTempConfigExists = await promisify(exists)(\n      './.gj/config.temp'\n    );\n    const TranspileAndWriteTemp = async (stats: Stats) => {\n      await TranspileTypescript([`/${configFilename}.ts`], './.gj');\n      console.log('Transpile complete!');\n      await promisify(writeFile)(\n        './.gj/config.temp',\n        stats.mtime.toISOString(),\n        { encoding: 'utf-8' }\n      );\n    };\n    const stats = await promisify(stat)(`./${configFilename}.ts`);\n    if (isMigrateTempConfigExists) {\n      const temp = await promisify(readFile)('./.gj/config.temp', {\n        encoding: 'utf-8'\n      });\n      if (new Date(temp).toISOString() !== stats.mtime.toISOString()) {\n        console.log(`${configFilename} configuration is new transpiling...`);\n        await TranspileAndWriteTemp(stats);\n      }\n    } else {\n      console.log(`Transpile ${configFilename}.ts...`);\n      await TranspileAndWriteTemp(stats);\n    }\n    config = require(join(process.cwd(), `./.gj`, `${configFilename}.js`));\n\n    try {\n      await promisify(unlink)(join('./.gj', `${configFilename}.js.map`));\n    } catch (e) {}\n  }\n  try {\n    config = JSON.parse(\n      await promisify(readFile)(join(process.cwd(), `${configFilename}.json`), {\n        encoding: 'utf-8'\n      })\n    );\n  } catch (e) {}\n\n  return config;\n}\n","export const basicTemplate = {\n  $mode: 'basic',\n  $types: {\n    user: {\n      pesho: 'string'\n    }\n  },\n  $schema: './schema.graphql',\n  $resolvers: {\n    findUser: {\n      gosho: 'omg',\n      pesho: 515151,\n      pesho2: 515151,\n      pesho3: 515151,\n      dadadada: 515151,\n      pesho4: 515151,\n      pesho5: [515151],\n      pesho6: ['515151']\n    },\n    findUser2: {\n      gosho: 'omg',\n      pesho: 22,\n      pesho2: 515151,\n      pesho3: 515151,\n      pesho4: 515151,\n      pesho5: 515151\n    }\n  }\n};\n","import {\n  GraphQLString,\n  GraphQLList,\n  GraphQLInt,\n  GraphQLObjectType,\n  GraphQLNonNull\n} from 'graphql';\nimport { BootstrapService } from '@gapi/core';\n\nexport function MakeAdvancedSchema(config, bootstrap: BootstrapService) {\n  const types = {};\n\n  Object.keys(config.$types).forEach(type => {\n    if (types[type]) {\n      return;\n    }\n    Object.keys(config.$types[type]).forEach(key => {\n      types[type] = types[type] || {};\n      const currentKey = config.$types[type][key];\n      if (currentKey === 'string' || currentKey === 'String') {\n        types[type][key] = { type: GraphQLString };\n      }\n      if (currentKey === 'string[]' || currentKey === 'String[]') {\n        types[type][key] = { type: new GraphQLList(GraphQLString) };\n      }\n      if (currentKey === 'number' || currentKey === 'Number') {\n        types[type][key] = { type: GraphQLInt };\n      }\n      if (currentKey === 'number[]' || currentKey === 'Number[]') {\n        types[type][key] = { type: new GraphQLList(GraphQLInt) };\n      }\n    });\n    types[type] = new GraphQLObjectType({\n      name: type,\n      fields: types[type]\n    });\n  });\n  const buildArgumentsSchema = (args: { [key: string]: string }) => {\n    const fields = {};\n    args = args || fields;\n    Object.keys(args).forEach(a => {\n      const currentArg = args[a];\n      if (currentArg === 'string' || currentArg === 'String') {\n        fields[a] = { type: GraphQLString };\n      }\n\n      if (currentArg === 'string[]' || currentArg === 'String[]') {\n        fields[a] = { type: new GraphQLList(GraphQLString) };\n      }\n\n      if (currentArg === 'string!' || currentArg === 'String!') {\n        fields[a] = { type: new GraphQLNonNull(GraphQLString) };\n      }\n\n      if (currentArg === 'string[]!' || currentArg === 'String[]!') {\n        fields[a] = {\n          type: new GraphQLNonNull(new GraphQLList(GraphQLString))\n        };\n      }\n    });\n    return fields;\n  };\n  Object.keys(config.$resolvers).forEach(method_name => {\n    const resolve = config.$resolvers[method_name].resolve;\n    const type = config.$resolvers[method_name].type;\n    if (!types[type]) {\n      throw new Error(\n        `Missing type '${type}', Available types: '${Object.keys(\n          types\n        ).toString()}'`\n      );\n    }\n    bootstrap.Fields.query[method_name] = {\n      type: types[type],\n      method_name,\n      args: buildArgumentsSchema(config.$resolvers[method_name].args),\n      public: true,\n      method_type: 'query',\n      target: () => {},\n      resolve: typeof resolve === 'function' ? resolve : () => resolve\n    } as any;\n  });\n}\n","import {\n  GraphQLString,\n  GraphQLInt,\n  GraphQLList,\n  GraphQLObjectType\n} from 'graphql';\nimport { BootstrapService } from '@gapi/core';\n\nexport function MakeBasicSchema(config, bootstrap: BootstrapService) {\n  Object.keys(config.$resolvers).forEach(method_name => {\n    const resolve = config.$resolvers[method_name];\n    const fields = {};\n    const args = {};\n\n    Object.keys(resolve).forEach(key => {\n      const resolver = resolve[key];\n      if (typeof resolver === 'string') {\n        fields[key] = { type: GraphQLString };\n      }\n\n      if (typeof resolver === 'number') {\n        fields[key] = { type: GraphQLInt };\n      }\n      if (typeof resolver !== 'string' && resolver.length) {\n        if (typeof resolver[0] === 'string') {\n          fields[key] = { type: new GraphQLList(GraphQLString) };\n        }\n\n        if (typeof resolver[0] === 'number') {\n          fields[key] = { type: new GraphQLList(GraphQLInt) };\n        }\n      }\n    });\n    bootstrap.Fields.query[method_name] = {\n      type: new GraphQLObjectType({\n        name: `${method_name}_type`,\n        fields: () => fields\n      }),\n      args,\n      method_name,\n      public: true,\n      method_type: 'query',\n      target: () => {},\n      resolve: typeof resolve === 'function' ? resolve : () => resolve\n    } as any;\n  });\n}\n","import {\n  Module,\n  SCHEMA_OVERRIDE,\n  BootstrapService,\n  GraphQLSchema,\n  printSchema,\n  buildSchema,\n  mergeSchemas\n} from '@gapi/core';\nimport { writeFile, readFileSync } from 'fs';\nimport { promisify } from 'util';\nimport { includes, nextOrDefault } from '../helpers/args-extractors';\nimport { VoyagerModule } from '@gapi/voyager';\nimport { getConfig } from '../helpers/set-config';\nimport { basicTemplate } from '../helpers/basic.template';\nimport { MakeAdvancedSchema } from '../helpers/advanced-schema';\nimport { MakeBasicSchema } from '../helpers/basic-schema';\nimport { join } from 'path';\n\n@Module({\n  imports: [VoyagerModule.forRoot()],\n  providers: [\n    {\n      provide: SCHEMA_OVERRIDE,\n      useFactory: () => (schema: GraphQLSchema) => {\n        let externalSchema;\n        try {\n          const config = JSON.parse(\n            readFileSync(join(process.cwd(), 'gj.json'), {\n              encoding: 'utf-8'\n            })\n          );\n          config.$schema = config.$schema || nextOrDefault('--schema', false);\n          if (config.$schema) {\n            externalSchema = readFileSync(config.$schema, {\n              encoding: 'utf-8'\n            });\n            externalSchema = buildSchema(externalSchema)\n          }\n        } catch (e) {}\n        const mergedSchemas = mergeSchemas({\n          schemas: [externalSchema, schema].filter(i => !!i)\n        });\n        if (includes('--verbose')) {\n          console.log(`\nSchema:\n${printSchema(mergedSchemas)}\n                  `);\n        }\n\n        if (process.argv.toString().includes('--generate')) {\n          promisify(writeFile)('./schema.graphql', printSchema(mergedSchemas), {\n            encoding: 'utf-8'\n          }).then(() => {\n            console.log('Schema created!');\n            process.exit(0);\n          });\n        } else {\n          console.log(\n            'You can extract this schema by running --extract command'\n          );\n        }\n        return mergedSchemas;\n      }\n    },\n    {\n      provide: 'createFields',\n      deps: [BootstrapService],\n      lazy: true,\n      useFactory: async (bootstrap: BootstrapService) => {\n        let config = await getConfig(\n          nextOrDefault('--config', 'graphqj-config')\n        );\n        if (!config) {\n          config = await getConfig('gj');\n        }\n        if (!config) {\n          config = basicTemplate;\n        }\n        config = config['default'] || config;\n\n        if (config.$mode === 'basic') {\n          MakeBasicSchema(config, bootstrap);\n        }\n\n        if (config.$mode === 'advanced') {\n          MakeAdvancedSchema(config, bootstrap);\n        }\n        return true;\n      }\n    }\n  ]\n})\nexport class AppModule {}\n","import { BootstrapFramework } from '@rxdi/core';\nimport { AppModule } from './app/app.module';\nimport { CoreModule } from '@gapi/core';\nimport { nextOrDefault, includes } from './helpers/args-extractors';\nimport { writeFile } from 'fs';\nimport { promisify } from 'util';\n\n\nif (includes('init')) {\n  if (includes('advanced')) {\n    promisify(writeFile)(\n      './gj.json',\n      `\n{\n  \"$mode\": \"advanced\",\n  \"$types\": {\n    \"user\": {\n      \"name\": \"string\",\n      \"email\": \"string\",\n      \"phone\": \"number\",\n      \"arrayOfNumbers\": \"number[]\",\n      \"arrayOfStrings\": \"string[]\"\n    }\n  },\n  \"$resolvers\": {\n    \"findUser\": {\n      \"type\": \"user\",\n      \"resolve\": {\n        \"name\": \"Kristiyan Tachev\",\n        \"email\": \"test@gmail.com\",\n        \"phone\": 414141,\n        \"arrayOfNumbers\": [515151, 412414],\n        \"arrayOfStrings\": [\"515151\", \"412414\"]\n      }\n    }\n  }\n}`,\n      { encoding: 'utf-8' }\n    );\n  } else {\n    promisify(writeFile)(\n      './gj.json',\n      `\n{\n  \"$mode\": \"basic\",\n  \"$resolvers\": {\n    \"findUser\": {\n      \"name\": \"Kristiyan Tachev\",\n      \"email\": \"test@gmail.com\",\n      \"phone\": 414141,\n      \"arrayOfNumbers\": [515151, 412414],\n      \"arrayOfStrings\": [\"515151\", \"412414\"]\n    }\n  }\n}\n`,\n      { encoding: 'utf-8' }\n    );\n  }\n} else {\n  BootstrapFramework(AppModule, [\n    CoreModule.forRoot({\n      graphql: {\n        openBrowser: nextOrDefault('--random', true, (v) => v === 'true' ? false : true)\n      },\n      server: {\n        randomPort: nextOrDefault('--random', false),\n        hapi: {\n          port: nextOrDefault('--port', 9000, p => Number(p))\n        }\n      }\n    })\n  ]).subscribe(() => console.log('Started'), console.log.bind(console));\n}\n"]}