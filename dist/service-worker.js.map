{"version":3,"sources":["service-worker.js"],"names":["cacheName","files","self","addEventListener","event","console","info","waitUntil","caches","open","then","cache","addAll","skipWaiting","catch","error","request","respondWith","match","response","fetch","responseToCache","clone","put","err","warn","url","message","keys","cacheNames","Promise","all","map","delete","clients","claim","title","body","registration","showNotification","tag","matchAll","client","postMessage","action","log","notification","close","type","i","length","focus","openWindow"],"mappings":"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","file":"service-worker.js","sourceRoot":"../src/app/client/application","sourcesContent":["//Cache polyfil to support cacheAPI in all browsers\n\n\nvar cacheName = 'cache-v4';\n\n//Files to save in cache\nvar files = [\n  './',\n  './index.html', //SW treats query string as new request\n  './manifest.webmanifest'\n];\n\n//Adding `install` event listener\nself.addEventListener('install', (event) => {\n  console.info('Event: Install');\n\n  event.waitUntil(\n    caches.open(cacheName)\n    .then((cache) => {\n      //[] of files to cache & if any of the file not present `addAll` will fail\n      return cache.addAll(files)\n      .then(() => {\n        console.info('All files are cached');\n        return self.skipWaiting(); //To forces the waiting service worker to become the active service worker\n      })\n      .catch((error) =>  {\n        console.error('Failed to cache', error);\n      })\n    })\n  );\n});\n\n/*\n  FETCH EVENT: triggered for every request made by index page, after install.\n*/\n\n//Adding `fetch` event listener\nself.addEventListener('fetch', (event) => {\n  console.info('Event: Fetch');\n\n  var request = event.request;\n\n  //Tell the browser to wait for newtwork request and respond with below\n  event.respondWith(\n    //If request is already in cache, return it\n    caches.match(request).then((response) => {\n      if (response) {\n        return response;\n      }\n\n      // // Checking for navigation preload response\n      // if (event.preloadResponse) {\n      //   console.info('Using navigation preload');\n      //   return response;\n      // }\n\n      //if request is not cached or navigation preload response, add it to cache\n      return fetch(request).then((response) => {\n        var responseToCache = response.clone();\n        caches.open(cacheName).then((cache) => {\n            cache.put(request, responseToCache).catch((err) => {\n              console.warn(request.url + ': ' + err.message);\n            });\n          });\n\n        return response;\n      });\n    })\n  );\n});\n\n/*\n  ACTIVATE EVENT: triggered once after registering, also used to clean up caches.\n*/\n\n//Adding `activate` event listener\nself.addEventListener('activate', (event) => {\n  console.info('Event: Activate');\n\n  //Navigation preload is help us make parallel request while service worker is booting up.\n  //Enable - chrome://flags/#enable-service-worker-navigation-preload\n  //Support - Chrome 57 beta (behing the flag)\n  //More info - https://developers.google.com/web/updates/2017/02/navigation-preload#the-problem\n\n  // Check if navigationPreload is supported or not\n  // if (self.registration.navigationPreload) { \n  //   self.registration.navigationPreload.enable();\n  // }\n  // else if (!self.registration.navigationPreload) { \n  //   console.info('Your browser does not support navigation preload.');\n  // }\n\n  //Remove old and unwanted caches\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames.map((cache) => {\n          if (cache !== cacheName) {\n            return caches.delete(cache); //Deleting the old cache (cache v1)\n          }\n        })\n      );\n    })\n    .then(function () {\n      console.info(\"Old caches are cleared!\");\n      // To tell the service worker to activate current one \n      // instead of waiting for the old one to finish.\n      return self.clients.claim(); \n    }) \n  );\n});\n\n/*\n  PUSH EVENT: triggered everytime, when a push notification is received.\n*/\n\n//Adding `push` event listener\nself.addEventListener('push', (event) => {\n  console.info('Event: Push');\n\n  var title = 'Push notification demo';\n  var body = {\n    'body': 'click to return to application',\n    'tag': 'demo',\n    'icon': './images/icons/apple-touch-icon.png',\n    'badge': './images/icons/apple-touch-icon.png',\n    //Custom actions buttons\n    'actions': [\n      { 'action': 'yes', 'title': 'I ♥ this app!'},\n      { 'action': 'no', 'title': 'I don\\'t like this app'}\n    ]\n  };\n\n  event.waitUntil(self.registration.showNotification(title, body));\n});\n\n/*\n  BACKGROUND SYNC EVENT: triggers after `bg sync` registration and page has network connection.\n  It will try and fetch github username, if its fulfills then sync is complete. If it fails,\n  another sync is scheduled to retry (will will also waits for network connection)\n*/\n\nself.addEventListener('sync', (event) => {\n  console.info('Event: Sync');\n\n  //Check registered sync name or emulated sync from devTools\n  if (event.tag === 'github' || event.tag === 'test-tag-from-devtools') {\n    event.waitUntil(\n      //To check all opened tabs and send postMessage to those tabs\n      self.clients.matchAll().then((all) => {\n        return all.map((client) => {\n          return client.postMessage('online'); //To make fetch request, check app.js - line no: 122\n        })\n      })\n      .catch((error) => {\n        console.error(error);\n      })\n    );\n  }\n});\n\n/*\n  NOTIFICATION EVENT: triggered when user click the notification.\n*/\n\n//Adding `notification` click event listener\nself.addEventListener('notificationclick', (event) => {\n  var url = 'https://demopwa.in/';\n\n  //Listen to custom action buttons in push notification\n  if (event.action === 'yes') {\n    console.log('I ♥ this app!');\n  }\n  else if (event.action === 'no') {\n    console.warn('I don\\'t like this app');\n  }\n\n  event.notification.close(); //Close the notification\n\n  //To open the app after clicking notification\n  event.waitUntil(\n    clients.matchAll({\n      type: 'window'\n    })\n    .then((clients) => {\n      for (var i = 0; i < clients.length; i++) {\n        var client = clients[i];\n        //If site is opened, focus to the site\n        if (client.url === url && 'focus' in client) {\n          return client.focus();\n        }\n      }\n\n      //If site is cannot be opened, open in new window\n      if (clients.openWindow) {\n        return clients.openWindow('/');\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    })\n  );\n});"]}